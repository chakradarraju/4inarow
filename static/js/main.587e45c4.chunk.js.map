{"version":3,"sources":["../node_modules/peerjs/dist sync","Cell.js","Board.js","common.js","counter.js","actions.js","Game.js","Start.js","Messenger.js","App.js","serviceWorker.js","reducers.js","store.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","Cell","params","gatedAttributes","enable","onMouseEnter","onHover","onClick","className","type","Board","hoverHandler","j","clickHandler","cells","map","r","i","key","c","playerColor","player1","player1Color","Counter","this","reset","result","count","prevColor","setWinner","color","inc","updateColor","checkEnd","N_ROWS","length","N_COLS","counter","rows","cols","boardFull","put","d","shortid","require","onExit","highlight","sendMessage","msg","data","generate","sentMessage","message","receiveMessage","ackMessage","addPiece","togglePlayer","setHostId","hostId","removeHostId","setNetworkGame","isNetworkGame","updateClientId","clientId","resetServerConnection","successfulServerConnection","resetPeerConnection","successfulPeerConnection","setPlayer1Name","name","setPlayer2Name","startGame","exitGame","connect","a","actions","player1Local","select","player1Turn","gameResult","useEffect","inMessages","ack","player1Name","player2Name","networkGame","peerConnected","style","margin","gameStrElement","useRef","gameStr","window","location","gameId","myClientId","newGameStr","useState","youStarted","setYouStarted","peerStarted","setPeerStarted","hasPeerLocation","hash","processMessage","console","log","str","parts","split","parseGameStr","substr","serverConnected","padding","prompt","ref","readOnly","value","current","document","execCommand","alert","opts","secure","protocol","serverConnection","setServerConnection","serverConnectionError","setServerConnectionError","peerConnection","setPeerConnection","peerConnectionError","setPeerConnectionError","isClient","setIsClient","tryPeerConnect","metadata","peerId","reliable","existingId","localStorage","getItem","setItem","Peer","disconnected","setTimeout","reconnect","indexOf","on","err","error","connection","off","outMessages","sent","send","gameStarted","Boolean","hostname","match","getInitCells","Array","fill","INIT_CELLS","state","action","lowestEmptyCell","removeHoverIndicator","hoverColor","slice","markMessage","messages","field","ret","updateIfMatches","store","createStore","combineReducers","reducers","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.587e45c4.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 43;","import React from 'react';\nimport './Cell.css';\n\nfunction Cell(params) {\n  const gatedAttributes = params.enable ? {\n    onMouseEnter: params.onHover,\n    onClick: params.onClick\n  } : {};\n  return <div {...gatedAttributes} className={'cell ' + params.type}></div>;\n}\n\nexport default Cell;","import React, {useState} from 'react';\nimport Cell from './Cell';\n\nfunction Board(params) {\n  const hoverHandler = (j) => () => params.onHover(j)\n  const clickHandler = (j) => () => params.onClick(j);\n\n  return params.cells.map((r, i) => <div key={i}>\n    {r.map((c, j) => <Cell \n      type={c}\n      key={j}\n      enable={params.enable}\n      onClick={clickHandler(j)}\n      onHover={hoverHandler(j)} />)}\n  </div>);\n}\n\nexport default Board;","export function playerColor(player1) {\n  return player1 ? 'b' : 'c';\n};\n  \n  ","import {playerColor} from './common';\nexport const NO_RESULT = 0;\nexport const TIE = 1;\nexport const PLAYER1_WON = 2;\nexport const PLAYER2_WON = 3;\n\nconst player1Color = playerColor(true);\nconst emptyColor = 'a';\n\nclass Counter {\n  constructor() {\n    this.reset();\n    this.result = NO_RESULT;\n  }\n\n  reset() {\n    this.count = 0;\n    this.prevColor = emptyColor;\n  }\n\n  inc() {\n    this.count++;\n    if (this.count === 4) this.setWinner();\n  }\n\n  setWinner() {\n    this.result = this.prevColor === player1Color ? PLAYER1_WON : PLAYER2_WON;\n  }\n\n  updateColor(color) {\n    this.prevColor = color;\n    this.count = 1;\n  }\n\n  put(color) {\n    if (color === emptyColor) this.reset();\n    else if (color === this.prevColor) this.inc();\n    else this.updateColor(color);\n    return this.result;\n  }\n}\n\nfunction boardFull(cells, rows, cols) {\n  for (var i = 0; i < rows; i++) for (var j = 0; j < cols; j++) if (cells[i][j] === emptyColor) return false;\n  return true;\n}\n\nfunction checkEnd(cells) {\n  const N_ROWS = cells.length;\n  const N_COLS = cells[0].length;\n  const counter = new Counter();\n  if (boardFull(cells, N_ROWS, N_COLS)) return TIE;\n  for (var i = 0; i < N_ROWS; i++) {\n    counter.reset();\n    for (var j = 0; j < N_COLS; j++)\n      if (counter.put(cells[i][j]) !== NO_RESULT) return counter.result;\n  }\n  for (var j = 0; j < N_COLS; j++) {\n    counter.reset();\n    for (var i = 0; i < N_ROWS; i++)\n      if (counter.put(cells[i][j]) !== NO_RESULT) return counter.result;\n  }\n  for (var d = 0; d < N_ROWS + N_COLS; d++) {\n    counter.reset();\n    for (var i = 0; i < N_ROWS; i++) {\n      const j = d - i;\n      if (j < 0 || j >= N_COLS) continue;\n      if (counter.put(cells[i][j]) !== NO_RESULT) return counter.result;\n    }\n  }\n  for (var d = -N_ROWS; d < N_COLS; d++) {\n    counter.reset();\n    for (var i = 0; i < N_ROWS; i++) {\n      const j = d + i;\n      if (j < 0 || j >= N_COLS) continue;\n      if (counter.put(cells[i][j]) !== NO_RESULT) return counter.result;\n    }\n  }\n  return NO_RESULT;\n}\n\n\nexport default checkEnd;","const shortid = require('shortid');\n\nexport const onExit = () => ({type: 'EXIT_GAME'});\n\nexport const highlight = (j, color) => ({type: 'HIGHLIGHT', j, color});\n\nexport const sendMessage = (msg, data) => ({type: 'SEND_MESSAGE', msg, data, id: shortid.generate()});\n\nexport const sentMessage = message => ({type: 'SENT_MESSAGE', id: message.id});\n\nexport const receiveMessage = (msg, data) => ({type: 'RECEIVED_MESSAGE', msg, data, id: shortid.generate()})\n\nexport const ackMessage = message => ({type: 'ACK_MESSAGE', id: message.id});\n\nexport const addPiece = (j, color) => ({type: 'ADD_PIECE', j, color});\n\nexport const checkEnd = cells => ({type: 'CHECK_END', cells});\n\nexport const togglePlayer = () => ({type: 'TOGGLE_PLAYER'});\n\nexport const setHostId = hostId => ({type: 'SET_HOST', hostId});\n\nexport const removeHostId = () => ({type: 'REMOVE_HOST'});\n\nexport const setNetworkGame = isNetworkGame => ({type: 'SET_NETWORK_GAME', isNetworkGame});\n\nexport const updateClientId = clientId => ({type: 'UPDATE_CLIENT_ID', clientId});\n\nexport const resetServerConnection = () => ({type: 'RESET_SERVER_CONNECTION'});\n\nexport const successfulServerConnection = () => ({type: 'SUCCESSFUL_SERVER_CONNECTION'});\n\nexport const resetPeerConnection = () => ({type: 'RESET_PEER_CONNECTION'});\n\nexport const successfulPeerConnection = () => ({type: 'SUCCESSFUL_PEER_CONNECTION'});\n\nexport const setPlayer1Name = name => ({type: 'SET_PLAYER1_NAME', name});\n\nexport const setPlayer2Name = name => ({type: 'SET_PLAYER2_NAME', name});\n\nexport const startGame = () => ({type: 'GAME_STARTED'});\n\nexport const exitGame = () => ({type: 'SHOW_START_SCREEN'});","import React, { useEffect } from 'react';\nimport Board from './Board';\nimport './Game.css';\nimport Cell from './Cell';\nimport { NO_RESULT, TIE, PLAYER1_WON, PLAYER2_WON } from './counter';\nimport {connect} from 'react-redux';\nimport {playerColor} from './common';\nimport * as actions from './actions';\n\nfunction Game(params) {\n  const player1Local = !params.hostId;\n\n  useEffect(() => {\n    for (var message of params.inMessages) {\n      if (!message.ack && message.msg === 'select') {\n        select(message.data);\n        params.ackMessage(message);\n      }\n    }\n  }, [params.inMessages]);\n\n  function onHover(j) {\n    params.highlight(j, playerColor(params.player1Turn))\n  }\n\n  function onClick(j) {\n    if (params.networkGame) params.sendMessage('select', j);\n    select(j);\n  }\n\n  function select(j) {\n    params.addPiece(j, playerColor(params.player1Turn));\n    params.checkEnd(params.cells);\n    if (params.gameResult === 0) params.togglePlayer();\n  }\n\n  function shouldEnableBoard() {\n    if (params.gameResult === NO_RESULT) {  // Game going on.\n      if (params.networkGame) {  // Make sure peer is connected, and it is your turn.\n        return params.peerConnected && (player1Local === params.player1Turn);\n      } else {  // Local game, no need to disable board.\n        return true;\n      }\n    } else {  // Game over, disable board.\n      return false;\n    }\n  }\n\n  function otherPlayer() {\n    return player1Local ? params.player2Name : params.player1Name;\n  }\n\n  function message() {\n    if (params.gameResult === TIE) return 'Tie';\n    if (params.gameResult === PLAYER1_WON) return params.player1Name + ' won';\n    if (params.gameResult === PLAYER2_WON) return params.player2Name + ' won';\n    if (params.networkGame && !params.peerConnected) return otherPlayer() + ' disconnected';\n    if (params.player1Turn) return params.player1Name + ' turn';\n    return params.player2Name + ' turn';\n  }\n\n  return (<>\n    <div className=\"users\">\n      <span className=\"you\"><Cell type={playerColor(true)} />{params.player1Name}</span>\n      <span className=\"opponent\">{params.player2Name}<Cell type={playerColor(false)} /></span>\n    </div>\n    <div className=\"message\">{message()}</div>\n    <button onClick={params.exitGame}>Exit</button>\n    <div style={{margin: '30px'}}>\n      <Board enable={shouldEnableBoard()} cells={params.cells} onHover={onHover} onClick={onClick} />\n    </div>\n  </>);\n}\n\nexport default connect(a => a, actions)(Game);","import React, { useState, useEffect, useRef } from 'react';\nimport {connect} from 'react-redux';\nimport * as actions from './actions';\nconst shortid = require('shortid');\n\nfunction Start(params) {\n  const gameStrElement = useRef();\n  const gameStr = window.location + '#' + newGameStr();\n  const [youStarted, setYouStarted] = useState(false);\n  const [peerStarted, setPeerStarted] = useState(false);\n\n  function hasPeerLocation() {\n    return window.location.hash && window.location.hash.length > 0;\n  }\n\n  function parseGameStr(str) {\n    console.log('Parsing game str', str);\n    const parts = str.split('/');\n    return parts.length === 2 ? parts : [null, null];\n  }\n\n  function newGameStr() {\n    const gameId = shortid.generate();\n    return params.myClientId + '/' + gameId;\n  }\n\n  useEffect(() => {\n    params.setNetworkGame(hasPeerLocation());\n  }, []);\n\n  function processMessage(message) {\n    if (message.msg === 'ask-player1-name') {\n      params.sendMessage('player1-name', params.player1Name);\n    } else if (message.msg === 'ask-player2-name') {\n      params.sendMessage('player2-name', params.player2Name);\n    } else if (message.msg === 'player1-name') {\n      if (params.hostId) params.setPlayer1Name(message.data);\n    } else if (message.msg === 'player2-name') {\n      if (!params.hostId) params.setPlayer2Name(message.data);\n    } else if (message.msg === 'peer-started') {\n      console.log('Got peer started');\n      setPeerStarted(true);\n    } else if (message.msg === 'ask-peer-started') {\n      console.log('Got peer started ask');\n      if (youStarted) params.sendMessage('peer-started', true);\n    } else {\n      return;\n    }\n    params.ackMessage(message);\n  }\n\n  useEffect(() => {\n    if (!params.inMessages) return;\n    for (var message of params.inMessages) if (!message.ack) processMessage(message);\n  }, [params.inMessages, params.hostId]);\n\n  useEffect(() => {\n    if (hasPeerLocation()) {\n      const [hostId, gameId] = parseGameStr(window.location.hash.substr(1));\n      if (hostId === null) {\n        console.log('Invalid game str');\n        return;\n      }\n      params.setHostId(hostId);\n    } else {\n      params.removeHostId();\n    }\n  }, [params.serverConnected]);\n\n  useEffect(() => {\n    if (params.peerConnected) {\n      params.setNetworkGame(true);\n      if (params.hostId) params.sendMessage('ask-player1-name', {});\n      else params.sendMessage('ask-player2-name', {});\n    }\n  }, [params.peerConnected]);\n\n  useEffect(() => {\n    if (params.networkGame && !params.hostId) params.sendMessage('player1-name', params.player1Name);\n  }, [params.player1Name]);\n\n  useEffect(() => {\n    if (params.networkGame && params.hostId) params.sendMessage('player2-name', params.player2Name);\n  }, [params.player2Name]);\n\n  function copyGameStr() {\n    if (!gameStrElement || !gameStrElement.current) return;\n    gameStrElement.current.select();\n    document.execCommand('copy');\n    alert('Copied, now send it to your friend');\n  }\n\n  useEffect(() => {\n    if (youStarted) params.sendMessage('peer-started', {});\n  }, [youStarted]);\n\n  useEffect(() => {\n    if (!youStarted) return;\n    if (peerStarted) params.startGame();\n    else params.sendMessage('ask-peer-started', {});\n  }, [youStarted, peerStarted]);\n\n  return (<div style={{margin: '30px'}}>\n    <div style={{margin: '30px'}}>\n      <button style={{padding: params.networkGame ? '' : '5px'}} onClick={() => params.setNetworkGame(false)}>Local game</button>\n      <button style={{padding: params.networkGame ? '5px' : ''}} onClick={() => params.setNetworkGame(true)}>Network game</button>\n    </div>\n    {!params.networkGame && <>\n      Update your names and hit start to play!<br/><br/>\n      Player 1: {params.player1Name}<button onClick={() => params.setPlayer1Name(prompt(\"Player 1 name\"))}>Change</button><br/>\n      Player 2: {params.player2Name}<button onClick={() => params.setPlayer2Name(prompt(\"Player 2 name\"))}>Change</button><br/>\n      <button style={{margin: '30px'}} onClick={params.startGame}>Start</button>\n    </>}\n    {params.networkGame && <>\n      {!params.serverConnected && <div>Connecting to server...</div>}\n      {params.serverConnected && !params.hostId && <>\n        <div style={{margin: '20px'}}>\n          <div>Name: {params.player1Name}<button onClick={() => params.setPlayer1Name(prompt(\"Your name\"))}>Change</button></div>\n          <div>Opponent name: {params.player2Name}</div>\n        </div>\n        {!params.peerConnected && <>\n          Ask your friend to open:<br/>\n          <input ref={gameStrElement} readOnly value={gameStr} /><button onClick={copyGameStr}>Copy</button>\n          <div>Waiting for peer...</div>\n        </>}\n      </>}\n      {params.serverConnected && params.hostId && <>\n        <div style={{margin: '20px'}}>\n          <div>Name: {params.player2Name}<button onClick={() => params.setPlayer2Name(prompt(\"Your name\"))}>Change</button></div>\n          <div>Opponent name: {params.player1Name}</div>\n        </div>\n        {!params.peerConnected && <>Connecting to host...</>}\n      </>}\n      {params.serverConnected && params.peerConnected && youStarted && <div>Waiting for peer to start...</div>}\n      {params.serverConnected && params.peerConnected && !youStarted && <button onClick={() => setYouStarted(true)}>Start</button>}\n    </>}\n  </div>);\n}\n\nexport default connect(a => a, actions)(Start);","import Peer from 'peerjs';\nimport {connect} from 'react-redux';\nimport {useEffect, useState} from 'react';\nimport * as actions from './actions';\nconst shortid = require('shortid');\n\nconst opts = { secure: window.location.protocol === 'https:' };\n\nfunction Messenger(params) {\n\n  const [serverConnection, setServerConnection] = useState(null);\n  const [serverConnectionError, setServerConnectionError] = useState(null);\n  const [peerConnection, setPeerConnection] = useState(null);\n  const [peerConnectionError, setPeerConnectionError] = useState(null);\n  const [isClient, setIsClient] = useState(true);\n\n  useEffect(() => {\n    const existingId = localStorage.getItem('client-id');\n    const id = existingId ? existingId : shortid.generate();\n    localStorage.setItem('client-id', id);\n    params.updateClientId(id);\n  }, []);\n  \n  useEffect(() => {\n    if (!params.myClientId) {\n      console.log('Not creating connection to server', params.myClientId);\n      return;\n    }\n    console.log('Connecting to server with', params.myClientId);\n    setServerConnection(new Peer(params.myClientId, opts));\n  }, [params.myClientId]);\n\n  function onServerDisconnected() {\n    setTimeout(() => {\n      if (serverConnection && serverConnection.disconnected) {\n        console.log('Trying to reconnect to server...');\n        serverConnection.reconnect();\n      }\n    }, 1000);\n  }\n\n  useEffect(() => {\n    if (!serverConnection || serverConnection.disconnected) {\n      params.resetServerConnection();\n      onServerDisconnected();\n    }\n    if (serverConnectionError && serverConnectionError.message.indexOf('Could not connect to peer') !== -1) tryPeerConnect();\n  }, [serverConnectionError]);\n\n  useEffect(() => {\n    if (params.serverConnected) setServerConnectionError(null);\n  }, [params.serverConnected]);\n\n  useEffect(() => {\n    if (!serverConnection) {\n      console.log('Skipping event handlers on invalid serverconnection', null);\n      return;\n    }\n    console.log('Setting up server connection');\n    params.resetServerConnection();\n    serverConnection.on('open', id => {\n      params.successfulServerConnection();\n    });\n    serverConnection.on('error', err => {\n      console.error('Got server error', err);\n      setServerConnectionError(err);\n    });\n    serverConnection.on('connection', connection => {\n      setPeerConnection(connection);\n    });\n    return () => {\n      serverConnection.off('open');\n      serverConnection.off('error');\n      serverConnection.off('connection');\n    }\n  }, [serverConnection]);\n\n  useEffect(() => {\n    if (!peerConnection) {\n      console.log('no peer connection');\n      return;\n    }\n    peerConnection.on('open', () => {\n      console.log('peer connected');\n      params.successfulPeerConnection();\n    });\n    peerConnection.on('data', msg => {\n      console.log('Received message', msg);\n      params.receiveMessage(msg.msg, msg.data);\n    });\n    peerConnection.on('error', err => {\n      console.error('Peer connection error', err);\n      setPeerConnectionError(err);\n      params.resetPeerConnection();\n    });\n    return () => {\n      peerConnection.off('open');\n      peerConnection.off('data');\n      peerConnection.off('error');\n    }\n  }, [peerConnection]);\n\n  function tryPeerConnect() {\n    if (!params.hostId) {\n      console.log('hostId missing', params.hostId);\n      return;\n    }\n    setPeerConnection(serverConnection.connect(params.hostId, {metadata: {peerId: params.myClientId}, reliable: true}));\n  }\n\n  function onDisconnected() {\n    if (isClient) setTimeout(() => {\n      console.log('Trying to reconnect...', params.hostId);\n      tryPeerConnect();\n    }, 1000);\n  }\n\n  useEffect(() => {\n    if (peerConnectionError && peerConnectionError.message.indexOf('disconnected') !== -1) onDisconnected();\n  }, [peerConnectionError]);\n\n  useEffect(() => {\n    if (params.peerConnected) setPeerConnectionError(null);\n  }, [params.peerConnected]);\n\n  useEffect(() => {\n    if (!serverConnection || !params.serverConnected) {\n      console.log('Not connected to server, skipping connecting to host', params.hostId, serverConnection, params.serverConnected);\n      return;\n    }\n    if (!params.hostId) return;\n    setIsClient(true);\n    tryPeerConnect();\n  }, [serverConnection, params.serverConnected, params.hostId]);\n\n  useEffect(() => {\n    if (!params.peerConnected) {\n      console.log('Unable to send message');\n      return;\n    }\n    for (var message of params.outMessages) {\n      if (!message.sent) {\n        peerConnection.send({msg: message.msg, data: message.data});\n        params.sentMessage(message);\n      }\n    }\n  }, [params.outMessages, params.peerConnected]);\n\n  return null;\n}\n\nexport default connect(a => a, actions)(Messenger);","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport Game from './Game';\nimport Start from './Start';\nimport Messenger from './Messenger';\nimport {connect} from 'react-redux';\n\n\nfunction App(params) {\n  return (<div className=\"App\">\n    <Messenger />\n    <div className=\"title\">4 IN A ROW</div>\n    <div>\n      {!params.gameStarted && <Start />}\n      {params.gameStarted && <Game />}\n    </div>\n  </div>);\n}\n\nexport default connect(a => a)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import checkEnd, { NO_RESULT, TIE, PLAYER1_WON, PLAYER2_WON } from './counter';\n\nconst N_ROWS = 6;\nconst N_COLS = 7;\nconst getInitCells = () => [...Array(N_ROWS)].map(e => new Array(N_COLS).fill('a'));\nconst INIT_CELLS = getInitCells();\n\nexport function myClientId(state = null, action) {\n  switch (action.type) {\n    case 'UPDATE_CLIENT_ID':\n      return action.clientId;\n    default:\n      return state;\n  };\n}\n\nexport function gameStarted(state = false, action) {\n  switch (action.type) {\n    case 'GAME_STARTED':\n      return true;\n    case 'SHOW_START_SCREEN':\n      return false;\n    default:\n      return state;\n  }\n}\n\nexport function gameId(state = null, action) {\n  switch (action.type) {\n    case 'SET_GAME_ID':\n      return action.gameId;\n    default:\n      return state;\n  }\n}\n\nexport function networkGame(state = false, action) {\n  switch (action.type) {\n    case 'SET_NETWORK_GAME':\n      return action.isNetworkGame;\n    default:\n      return state;\n  }\n}\n\nfunction lowestEmptyCell(cells, j) {\n  var i = N_ROWS - 1;\n  while (i >= 0 && cells[i][j] !== 'a') i--;\n  return i;\n}\n\nfunction removeHoverIndicator(cells, hoverColor) {\n  for (var i = 0; i < N_ROWS; i++) for (var j = 0; j < N_COLS; j++)\n    if (cells[i][j] === hoverColor)\n      cells[i][j] = 'a';\n}\n\nfunction addPiece(state, action) {\n  removeHoverIndicator(state, action.color + 'l');\n  const i = lowestEmptyCell(state, action.j);\n  if (i < 0) {\n    console.log('Column does not have empty cell');\n    return state;\n  }\n  state[i][action.j] = action.color;\n  return state.slice();\n}\n\nexport function cells(state = INIT_CELLS, action) {\n  switch (action.type) {\n    case 'ADD_PIECE':\n      return addPiece(state, action);\n    case 'HIGHLIGHT':\n      removeHoverIndicator(state, action.color + 'l');\n      const i = lowestEmptyCell(state, action.j);\n      if (i < 0) return state;\n      state[i][action.j] = action.color + 'l';\n      return state.slice();\n    case 'GAME_STARTED':\n      return getInitCells();\n    default:\n      return state;\n  }\n}\n\nexport function gameResult(state = NO_RESULT, action) {\n  switch (action.type) {\n    case 'CHECK_END':\n      return checkEnd(action.cells);\n    case 'GAME_STARTED':\n      return NO_RESULT;\n    default:\n      return state;\n  }\n}\n\nexport function player1Turn(state = true, action) {\n  switch (action.type) {\n    case 'TOGGLE_PLAYER':\n      return !state;\n    case 'GAME_STARTED':\n      return true;\n    default:\n      return state;\n  }\n}\n\nfunction updateIfMatches(message, id, field, value) {\n  if (message.id !== id) return message;\n  const ret = {...message};\n  ret[field] = value;\n  return ret;\n}\n\nfunction markMessage(messages, id, field, value) {\n  return messages.map(msg => updateIfMatches(msg, id, field, value));\n}\n\nexport function outMessages(state = [], action) {\n  switch (action.type) {\n    case 'SEND_MESSAGE':\n      return [...state, {id: action.id, msg: action.msg, data: action.data}];\n    case 'SENT_MESSAGE':\n      return markMessage(state, action.id, 'sent', true);\n    default:\n      return state;\n  }\n}\n\nexport function inMessages(state = [], action) {\n  switch (action.type) {\n    case 'RECEIVED_MESSAGE':\n      return [...state, {id: action.id, msg: action.msg, data: action.data}];\n    case 'ACK_MESSAGE':\n      return markMessage(state, action.id, 'ack', true);\n    default:\n      return state;\n  }\n}\n\nexport function hostId(state = null, action) {\n  switch (action.type) {\n    case 'SET_HOST':\n      return action.hostId;\n    case 'REMOVE_HOST':\n      return null;\n    default:\n      return state;\n  }\n}\n\nexport function serverConnected(state = false, action) {\n  switch (action.type) {\n    case 'RESET_SERVER_CONNECTION':\n      return false;\n    case 'SUCCESSFUL_SERVER_CONNECTION':\n      return true;\n    default:\n      return state;\n  }\n}\n\nexport function peerConnected(state = false, action) {\n  switch (action.type) {\n    case 'RESET_PEER_CONNECTION':\n      return false;\n    case 'SUCCESSFUL_PEER_CONNECTION':\n      return true;\n    default:\n      return state;\n  }\n}\n\nexport function player1Name(state = 'Player 1', action) {\n  switch (action.type) {\n    case 'SET_PLAYER1_NAME':\n      return action.name;\n    default:\n      return state;\n  }\n}\n\nexport function player2Name(state = 'Player 2', action) {\n  switch (action.type) {\n    case 'SET_PLAYER2_NAME':\n      return action.name;\n    default:\n      return state;\n  }\n}","import { combineReducers, createStore } from 'redux';\nimport * as reducers from './reducers';\n\nconst store = createStore(combineReducers(reducers), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}