{"version":3,"sources":["../node_modules/peerjs/dist sync","Cell.js","Board.js","counter.js","Game.js","Start.js","messenger.js","App.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","Cell","params","gatedAttributes","enable","onMouseEnter","onHover","onClick","className","type","Board","hoverHandler","j","clickHandler","cells","map","r","i","key","c","Counter","this","reset","n","cc","checkEnd","N_ROWS","length","N_COLS","counter","ne","count","currentColor","d","Game","INIT_VALUES","Array","fill","useState","setCells","player1","currentPlayer","setCurrentPlayer","gameOver","setGameOver","isNetworkGame","player1Local","player2Local","removeHoverIndicator","hoverColor","playerColor","lowestEmptyCell","select","slice","result","player2","alert","nextPlayer","player","useEffect","messenger","on","data","off","onExit","style","margin","console","log","send","shortid","require","Start","hasPeerLocation","showLocal","setShowLocal","isHost","setIsHost","peerConnected","setPeerConnected","signalingConnected","setSignalingConnected","gameStrElement","useRef","gameStr","window","location","gameId","generate","newGameStr","hash","onPeerConnected","signaling","status","str","parts","split","parseGameStr","substr","hostId","connect","metadata","peerId","reliable","name","setPlayer1","expectConnect","setPlayer2","padding","prompt","onStart","ref","readOnly","value","current","document","execCommand","setPlayer1Local","setPlayer2Local","localStorage","getItem","setItem","opts","secure","protocol","peer","Peer","connection","onSignalingOpen","bind","error","peerConnection","eventListeners","queue","options","setConnection","trigger","err","onData","event","args","listeners","forEach","cb","callback","push","msg","App","started","setStarted","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.b27f230e.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 30;","import React from 'react';\nimport './Cell.css';\n\nfunction Cell(params) {\n  const gatedAttributes = params.enable ? {\n    onMouseEnter: params.onHover,\n    onClick: params.onClick\n  } : {};\n  return <div {...gatedAttributes} className={'cell ' + params.type}></div>;\n}\n\nexport default Cell;","import React, {useState} from 'react';\nimport Cell from './Cell';\n\nfunction Board(params) {\n  const hoverHandler = (j) => () => params.onHover(j)\n  const clickHandler = (j) => () => params.onClick(j);\n\n  return params.cells.map((r, i) => <div key={i}>\n    {r.map((c, j) => <Cell \n      type={c}\n      key={j}\n      enable={params.enable}\n      onClick={clickHandler(j)}\n      onHover={hoverHandler(j)} />)}\n  </div>);\n}\n\nexport default Board;","\nclass Counter {\n  constructor() {\n    this.reset();\n  }\n\n  reset() {\n    this.n = 0;\n    this.c = '';\n  }\n\n  count(cc) {\n    if (this.c === cc) {\n      this.n++;\n      if (this.n === 4) return true;\n    } else {\n      this.c = cc;\n      this.n = 1;\n    }\n    return false;\n  }\n\n  currentColor() {\n    return this.c;\n  }\n}\n\nfunction checkEnd(cells) {\n  const N_ROWS = cells.length;\n  const N_COLS = cells[0].length;\n  const counter = new Counter();\n  var ne = 0;\n  for (var i = 0; i < N_ROWS; i++) {\n    counter.reset();\n    for (var j = 0; j < N_COLS; j++) {\n      if (cells[i][j] === 'e') {\n        ne++;\n        counter.reset();\n      } else {\n        if (counter.count(cells[i][j])) {\n          return counter.currentColor();\n        }          \n      }\n    }\n  }\n  if (ne === 0) return 'tie';\n  for (var j = 0; j < N_COLS; j++) {\n    counter.reset();\n    for (var i = 0; i < N_ROWS; i++) {\n      if (cells[i][j] !== 'e') {\n        if (counter.count(cells[i][j])) {\n          return counter.currentColor();\n        }\n      } else counter.reset();\n    }\n  }\n  for (var d = 0; d < N_ROWS + N_COLS; d++) {\n    counter.reset();\n    for (var i = 0; i < N_ROWS; i++) {\n      const j = d - i;\n      if (j < 0 || j >= N_COLS) continue;\n      if (cells[i][j] !== 'e') {\n        if (counter.count(cells[i][j])) {\n          return counter.currentColor();\n        }\n      } else counter.reset();\n    }\n  }\n  for (var d = -N_ROWS; d < N_COLS; d++) {\n    counter.reset();\n    for (var i = 0; i < N_ROWS; i++) {\n      const j = d + i;\n      if (j < 0 || j >= N_COLS) continue;\n      if (cells[i][j] !== 'e') {\n        if (counter.count(cells[i][j])) {\n          return counter.currentColor();\n        }\n      } else counter.reset();\n    }\n  }\n  return null;\n}\n\n\nexport default checkEnd;","import React, {useState, useEffect} from 'react';\nimport Board from './Board';\nimport './Game.css';\nimport Cell from './Cell';\nimport checkEnd from './counter';\n\nfunction Game(params) {\n  const N_ROWS = 7;\n  const N_COLS = 7;\n  const INIT_VALUES = [...Array(N_ROWS)].map(e => new Array(N_COLS).fill('e'));\n  const [cells, setCells] = useState(INIT_VALUES);  \n  const [currentPlayer, setCurrentPlayer] = useState(params.player1);\n  const [gameOver, setGameOver] = useState(false);\n  const isNetworkGame = params.player1Local !== params.player2Local;\n\n  useEffect(() => {\n    if (!params.player1Local) params.messenger.on('player1-select', data => select(data.i, data.j));\n    if (!params.player2Local) params.messenger.on('player2-select', data => select(data.i, data.j));\n    return () => {\n      if (!params.player1Local) params.messenger.off('player1-select');\n      if (!params.player2Local) params.messenger.off('player2-select');\n    }\n  }, [currentPlayer]);\n\n  function removeHoverIndicator() {\n    const hoverColor = playerColor(currentPlayer) + 'l';\n    for (var i = 0; i < N_ROWS; i++) for (var j = 0; j < N_COLS; j++)\n      if (cells[i][j] === hoverColor)\n        cells[i][j] = 'e';\n  }\n\n  function onHover(j) {\n    removeHoverIndicator();\n    const i = lowestEmptyCell(j);\n    if (i < 0) return;\n    cells[i][j] = playerColor(currentPlayer) + 'l';\n    setCells(cells.slice());\n  }\n\n  function lowestEmptyCell(j) {\n    var i = N_ROWS - 1;\n    while (cells[i][j] !== 'e' && i > 0) i--;\n    return i;\n  }\n\n  function onClick(j) {\n    removeHoverIndicator();\n    const i = lowestEmptyCell(j);\n    if (i < 0) {\n      console.log('Column does not have empty cell');\n      return;\n    }\n    if (isNetworkGame) params.messenger.send(currentPlayerId() + '-select', {i, j});\n    select(i, j);\n  }\n\n  function select(i, j) {\n    cells[i][j] = playerColor(currentPlayer);\n    setCells(cells.slice());\n    var result = checkEnd(cells);\n    if (result !== null) {\n      if (result !== 'tie') result = playerName(result) + ' won';\n      alert(result);\n      setGameOver(true);\n    }\n    const nextPlayer = otherPlayer(currentPlayer);\n    setCurrentPlayer(nextPlayer);\n  }\n\n  function otherPlayer(player) {\n    return player === params.player1 ? params.player2 : params.player1;\n  }\n\n  function playerColor(player) {\n    return player === params.player1 ? 'b' : 'r';\n  }\n\n  function playerName(color) {\n    return color === 'b' ? params.player1 : params.player2;\n  }\n\n  function isCurrentPlayerLocal() {\n    return (currentPlayer === params.player1 && params.player1Local) || (currentPlayer === params.player2 && params.player2Local);\n  }\n\n  function currentPlayerId() {\n    return currentPlayer === params.player1 ? 'player1' : 'player2';\n  }\n\n  return (<>\n    <div className=\"users\">\n      <span className=\"you\"><Cell type='b'/>{params.player1}</span>\n      <span className=\"opponent\">{params.player2}<Cell type='r'/></span>\n    </div>\n    <div className=\"message\">{currentPlayer} turn</div>\n    <button onClick={params.onExit}>Exit</button>\n    <div style={{margin: '30px'}}>\n      <Board enable={!gameOver && isCurrentPlayerLocal()} cells={cells} onHover={onHover} onClick={onClick} />\n    </div>\n  </>);\n}\n\nexport default Game;","import React, { useState, useEffect, useRef } from 'react';\nconst shortid = require('shortid');\n\nfunction Start(params) {\n  const [showLocal, setShowLocal] = useState(!hasPeerLocation());\n  const [isHost, setIsHost] = useState(true);\n  const [peerConnected, setPeerConnected] = useState(false);\n  const [signalingConnected, setSignalingConnected] = useState(false);\n  const gameStrElement = useRef();\n  const gameStr = window.location + '#' + newGameStr();\n\n  function hasPeerLocation() {\n    return window.location.hash && window.location.hash.length > 0;\n  }\n\n  function parseGameStr(str) {\n    console.log('Parsing game str', str);\n    const parts = str.split('/');\n    return parts.length === 2 ? parts : [null, null];\n  }\n\n  function newGameStr() {\n    const gameId = shortid.generate();\n    return params.messenger.id + '/' + gameId;\n  }\n\n  useEffect(() => {\n    if (params.messenger.signaling) setSignalingConnected(true);\n    else params.messenger.on('signaling-change', (status, id) => {\n      setSignalingConnected(status);\n      if (!status) return;\n      console.log('signaling ready', id);\n      if (hasPeerLocation()) {\n        setIsHost(false);\n        const [hostId, gameId] = parseGameStr(window.location.hash.substr(1));\n        if (hostId === null) {\n          console.log('Invalid game str');\n          return;\n        }\n        params.messenger.connect(hostId, {metadata: {peerId: params.messenger.id}, reliable: true});\n        params.messenger.on('player1-name', name => params.setPlayer1(name));\n      } else {\n        setIsHost(true);\n        params.messenger.expectConnect();\n        params.messenger.on('player2-name', name => params.setPlayer2(name));\n      }\n      if (params.messenger.peerConnected) onPeerConnected();\n      else params.messenger.on('peer-connected', onPeerConnected); \n    });\n  }, []);\n\n  function onPeerConnected() {\n    setPeerConnected(true);\n    setShowLocal(false);\n    params.messenger.send('player1-name', params.player1);\n    params.messenger.send('player2-name', params.player2);\n  }\n\n  useEffect(() => {\n    params.messenger.send('player1-name', params.player1);\n  }, [params.player1]);\n\n  useEffect(() => {\n    params.messenger.send('player2-name', params.player2);\n  }, [params.player2]);\n\n  function copyGameStr() {\n    if (!gameStrElement || !gameStrElement.current) return;\n    gameStrElement.current.select();\n    document.execCommand('copy');\n    alert('Copied, now send it to your friend');\n  }\n\n  function setLocalAndStart() {\n    params.setPlayer1Local(isHost);\n    params.setPlayer2Local(!isHost);\n    params.onStart();\n  }\n\n  return (<div style={{margin: '30px'}}>\n    <div style={{margin: '30px'}}>\n      <button style={{padding: showLocal ? '5px' : ''}} onClick={() => setShowLocal(true)}>Local game</button>\n      <button style={{padding: showLocal ? '' : '5px'}} onClick={() => setShowLocal(false)}>Network game</button>\n    </div>\n    {showLocal && <>\n      Update your names and hit start to play!<br/><br/>\n      Player 1: {params.player1}<button onClick={() => params.setPlayer1(prompt(\"Player 1 name\"))}>Change</button><br/>\n      Player 2: {params.player2}<button onClick={() => params.setPlayer2(prompt(\"Player 2 name\"))}>Change</button><br/>\n      <button style={{margin: '30px'}} onClick={params.onStart}>Start</button>\n    </>}\n    {!showLocal && <>\n      {!signalingConnected && <div>Connecting to server...</div>}\n      {signalingConnected && isHost && <>\n        <div style={{margin: '20px'}}>\n          <div>Name: {params.player1}<button onClick={() => params.setPlayer1(prompt(\"Your name\"))}>Change</button></div>\n          <div>Opponent name: {params.player2}</div>\n        </div>\n        {!peerConnected && <>\n          Ask your friend to open:<br/>\n          <input ref={gameStrElement} readOnly value={gameStr} /><button onClick={copyGameStr}>Copy</button>\n          <div>Waiting for peer...</div>\n        </>}\n      </>}\n      {signalingConnected && !isHost && <>\n        <div style={{margin: '20px'}}>\n          <div>Name: {params.player2}<button onClick={() => params.setPlayer2(prompt(\"Your name\"))}>Change</button></div>\n          <div>Opponent name: {params.player1}</div>\n        </div>\n        {!peerConnected && <>Connecting to host...</>}\n      </>}\n      {peerConnected && <button onClick={setLocalAndStart}>Start</button>}\n    </>}\n  </div>);\n}\n\nexport default Start;","import Peer from 'peerjs';\nconst shortid = require('shortid');\n\nclass Messenger {\n  constructor() {\n    console.log('Starting messenger');\n    var id = localStorage.getItem('client-id');\n    if (!id) id = shortid.generate();\n    localStorage.setItem('client-id', id);\n    console.log('client id', id);\n    this.id = id;\n    const opts = {secure: window.location.protocol === 'https:'};\n    console.log('peer opts', opts);\n    this.peer = new Peer(id, opts);\n    window.messenger = this;\n    this.signaling = null;\n    this.connection = null;\n    this.peer.on('open', this.onSignalingOpen.bind(this));\n    this.peer.on('error', console.error);\n    this.peerConnection = false;\n    this.eventListeners = {};\n    this.queue = [];\n  }\n\n  connect(peerId, options) {\n    console.log('connecting to host', peerId);\n    this.setConnection(this.peer.connect(peerId, options));\n  }\n\n  expectConnect() {\n    console.log('Looking for connection');\n    this.peer.on('connection', this.setConnection.bind(this));\n  }\n\n  onSignalingOpen(id) {\n    this.signaling = true;\n    this.trigger('signaling-change', [true, id]);\n  }\n\n  onSignalingError(err) {\n    this.signaling = false;\n    console.error(err);\n    this.trigger('signaling-change', [false]);\n  }\n\n  isSignalingConnected() {\n    return this.signaling;\n  }\n\n  setConnection(connection) {\n    console.log('Setting up connection', connection);\n    this.connection = connection;\n    this.connection.on('open', this.onPeerConnected.bind(this));\n    this.connection.on('data', this.onData.bind(this));\n    this.connection.on('error', console.error);\n  }\n\n  trigger(event, args) {\n    const listeners = this.eventListeners[event];\n    if (listeners) listeners.forEach(cb => cb(...args));\n  }\n\n  on(event, callback) {\n    if (!this.eventListeners[event]) this.eventListeners[event] = [];\n    this.eventListeners[event].push(callback);\n  }\n\n  off(event) {\n    delete this.eventListeners[event];\n  }\n\n  onPeerConnected() {\n    this.peerConnection = true;\n    this.trigger('peer-connected', [true]);\n    for (var i = 0; i < this.queue.length; i++) this.connection.send(this.queue[i]);\n    this.queue = [];\n  }\n\n  send(type, data) {\n    const msg = {type, data};\n    if (this.peerConnection) this.connection.send(msg);\n    else this.queue.push(msg);\n  }\n\n  onData(msg) {\n    console.log('got message', msg);\n    if (msg.type) this.trigger(msg.type, [msg.data]);\n  }\n}\n\nexport default Messenger;","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport Game from './Game';\nimport Start from './Start';\nimport Messenger from './messenger';\n\nconst messenger = new Messenger();\n\nfunction App() {\n  const [started, setStarted] = useState(false);\n  const [player1, setPlayer1] = useState('Player 1');\n  const [player2, setPlayer2] = useState('Player 2');\n  const [player1Local, setPlayer1Local] = useState(true);\n  const [player2Local, setPlayer2Local] = useState(true);\n\n  return (<div className=\"App\">\n    <div className=\"title\">4 IN A ROW</div>\n    <div>\n      {!started && <Start messenger={messenger} player1={player1} player2={player2} setPlayer1={setPlayer1} setPlayer2={setPlayer2} onStart={() => setStarted(true)} messenger={messenger} setPlayer1Local={setPlayer1Local} setPlayer2Local={setPlayer2Local} />}\n      {started && <Game player1={player1} player2={player2} player1Local={player1Local} player2Local={player2Local} onExit={() => setStarted(false)} messenger={messenger} />}\n    </div>\n  </div>);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}